@mixin ripple($color) {
    position: relative;

    &:before {
        content: "";
        display: block;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        margin-left: 0;
        @include gradient-radial($color 10%, transparent 10.01%);
        background-size: 1000% 1000%;
        background-position: 50%;
        border: none;
        opacity: 0;
        pointer-events: none;
        transition: background .5s, opacity 1s;
    }

    &:active:before {
        background-size: 0% 0%;
        opacity: .2;
        transition: 0s;
    }
}

@mixin _assert-ascending($map, $map-name) {
    $prev-key: null;
    $prev-num: null;
    @each $key, $num in $map {
        @if $prev-num == null {
            // Do nothing
        } @else if not comparable($prev-num, $num) {
            @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        } @else if $prev-num >= $num {
            @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
        }

        $prev-key: $key;
        $prev-num: $num;
    }
}
